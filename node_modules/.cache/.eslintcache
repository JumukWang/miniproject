[{"/Users/hayeon/Desktop/minipro2/src/index.js":"1","/Users/hayeon/Desktop/minipro2/src/reportWebVitals.js":"2","/Users/hayeon/Desktop/minipro2/src/App.js":"3","/Users/hayeon/Desktop/minipro2/src/redux/configStore.js":"4","/Users/hayeon/Desktop/minipro2/src/pages/Main.js":"5","/Users/hayeon/Desktop/minipro2/src/pages/SignUp.js":"6","/Users/hayeon/Desktop/minipro2/src/pages/LogIn.js":"7","/Users/hayeon/Desktop/minipro2/src/pages/Detail.js":"8","/Users/hayeon/Desktop/minipro2/src/redux/modules/User.js":"9","/Users/hayeon/Desktop/minipro2/src/redux/modules/Post.js":"10","/Users/hayeon/Desktop/minipro2/src/shared/Validate.js":"11"},{"size":723,"mtime":1655082155250,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1655082155251,"results":"14","hashOfConfig":"13"},{"size":1466,"mtime":1655082155248,"results":"15","hashOfConfig":"13"},{"size":248,"mtime":1655082155251,"results":"16","hashOfConfig":"13"},{"size":987,"mtime":1655082155250,"results":"17","hashOfConfig":"13"},{"size":4613,"mtime":1655096926384,"results":"18","hashOfConfig":"13"},{"size":2088,"mtime":1655095305058,"results":"19","hashOfConfig":"13"},{"size":2263,"mtime":1655082155250,"results":"20","hashOfConfig":"13"},{"size":678,"mtime":1655082155251,"results":"21","hashOfConfig":"13"},{"size":2507,"mtime":1655082155251,"results":"22","hashOfConfig":"13"},{"size":560,"mtime":1655082155251,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qb2mo1",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hayeon/Desktop/minipro2/src/index.js",[],[],"/Users/hayeon/Desktop/minipro2/src/reportWebVitals.js",[],[],"/Users/hayeon/Desktop/minipro2/src/App.js",["61"],[],"import React from 'react';\nimport './App.css';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport SignUp from './pages/SignUp';\nimport Main from './pages/Main';\nimport LogIn from './pages/LogIn';\nimport Detail from './pages/Detail';\nimport styled from 'styled-components'\n\n\n\nfunction App() {\n  const [가게이름, 가게이름변경] = React.useState([\n    { id: 0,\n      name: '가게이름',\n      location: '위치0',\n      image: '사진0',\n      content: '음식정보0'\n    },\n    { id: 1,\n      name: '핫도그가게',\n      location: '의정부',\n      image: '사진1',\n      content: '음식정보1'\n    },\n    { id: 2,\n      name: '김밥가게',\n      location: '김포',\n      image: '사진2',\n      content: '음식정보2'\n    },\n    { id: 3,\n      name: '우동가게',\n      location: '마포',\n      image: '사진3',\n      content: '음식정보3'\n    },\n  ])\n\n \n  const navigate = useNavigate();\n  return (\n    <div className=\"App\">\n      <Title onClick={()=> {navigate('/') }}>🛣고속도로  로 '맛' 으 </Title>\n      <Routes>\n        <Route path=\"/\" element={<Main 가게이름={가게이름}/>} />             \n        <Route path=\"/SignUp\" element={<SignUp />} />   \n        <Route path=\"/LogIn\" element={<LogIn />} />\n        <Route path='/Detail/:id' element={<Detail 가게이름={가게이름}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nconst Title = styled.h1`\nfont-family: 'Yeongdo-Rg';\n\n`\n\nexport default App;\n","/Users/hayeon/Desktop/minipro2/src/redux/configStore.js",[],[],"/Users/hayeon/Desktop/minipro2/src/pages/Main.js",[],[],"/Users/hayeon/Desktop/minipro2/src/pages/SignUp.js",["62","63","64","65","66","67","68"],[],"import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { emailCheck, passwordCheck, DoubleCheck } from \"../shared/Validate\";\r\n\r\n\r\nfunction SignUp() {\r\n    const navigate = useNavigate();\r\n\r\n    const profile_ref= React.useRef(null);\r\n    const id_ref = React.useRef(null);\r\n    const pw_ref = React.useRef(null);\r\n    const pw_check_ref = React.useRef(null);\r\n\r\n    const [myprof,serMypro]=React.useState(\"\");\r\n    const [username, setUserName] = React.useState(\"\");\r\n    const [password, setPwd] = React.useState(\"\");\r\n    const [pwdCheck, setPwdCheck] = React.useState(\"\");\r\n\r\n    const [id_check, checkId] = React.useState(false);\r\n    const [pwd_check, checkPwd] = React.useState(false);\r\n    const [pwd_double_check, checkPwdCheck] = React.useState(false);\r\n\r\n    \r\n   \r\n    const signupdata = () => {\r\n        if(!emailCheck(id_ref.current.value)){\r\n            checkId(true);\r\n            window.alert(\"이메일 형식이 맞지 않습니다!\");\r\n        };\r\n\r\n        if(!passwordCheck(pw_ref.current.value)){\r\n            checkPwd(true);\r\n            window.alert(\"비밀번호 형식이 맞지 않습니다!\")\r\n            return;\r\n        };\r\n\r\n        if(!DoubleCheck(pw_ref.current.value, pw_check_ref.current.value)){\r\n            checkPwdCheck(true);\r\n            window.alert(\"비밀번호가 같지 않습니다!\")\r\n            return;\r\n        };\r\n        if (\r\n            emailCheck(id_ref.current.value) &&\r\n            passwordCheck(pw_ref.current.value) &&\r\n            DoubleCheck(pw_ref.current.value, pw_check_ref.current.value)\r\n        ){\r\n        axios.post(\"http://localhost:3000/api/SignUp\",{\r\n            // \"profile\":profile_ref.current.value,\r\n            \"userId\" : id_ref.current.value,\r\n            \"password\": pw_ref.current.value,\r\n            // \"passwordCheck\": pw_check_ref.current.value\r\n        }).then(function(response){\r\n            alert(\"회원가입을 축하드립니다!!\")\r\n            navigate('/');\r\n\r\n        })\r\n        }\r\n    }\r\n        \r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n\r\n\r\n                <div style={{}}>\r\n                    <Container>\r\n                       <input\r\n                            type=\"file\"\r\n                            label=\"파일선택\"\r\n                             onChange={(e) => serMypro(e.target.value)}\r\n                            \r\n                            ref={profile_ref} /><br />\r\n                        <input\r\n                            label=\"아이디\"\r\n                             onChange={(e) => setUserName(e.target.value)}\r\n                            placeholder=\"이메일 형식 아이디를 입력해주세요.\"\r\n                            ref={id_ref} /><br />\r\n\r\n                        <input\r\n                            label=\"비밀번호\"\r\n                             onChange={(e) => setPwd(e.target.value)}\r\n                            type=\"Password\"\r\n                            placeholder=\"7자리이상 비밀번호 입력해주세요\"\r\n                            ref={pw_ref} /><br />\r\n\r\n                        <input\r\n                            label=\"비밀번호 확인\"\r\n                             onChange={(e) => setPwdCheck(e.target.value)}\r\n                            type=\"Password\"\r\n                            placeholder=\"비밀번호를 다시 한번 입력해주세요.\" \r\n                            ref={pw_check_ref}/><br />\r\n                        <Signupbutton>\r\n                            <button\r\n                                onClick={signupdata} type=\"submit\" \r\n                                bgcolor=\"#f49a28\" color=\"white\" >회원가입</button>\r\n\r\n                            <button onClick={() => { navigate('/') }} \r\n                                bgcolor=\"#007356\" color=\"white\" > 취소</button>\r\n                        </Signupbutton>\r\n\r\n                       \r\n\r\n                    </Container>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n\r\nbackground-size: cover;\r\nbackground-color: ;\r\nwidth: 400px;\r\nheight: 450px;\r\npadding: 50px;\r\nborder: 2px solid black;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-content: flex-start;\r\nfloat: center;\r\nmargin: 40px 20px 40px 20px;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%,-50%);\r\n\r\ntext-align: center;\r\n\r\n\r\n`\r\nconst Signupbutton = styled.div`\r\n  margin: auto;\r\n  width: 220px;\r\n  padding: 20px;\r\n\r\n  &button {\r\n      margin-left: 10px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default SignUp","/Users/hayeon/Desktop/minipro2/src/pages/LogIn.js",["69","70"],[],"import React from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction LogIn() {\r\n\r\n    const navigate = useNavigate();\r\n    const id_ref = React.useRef(null);\r\n    const pw_ref = React.useRef(null);\r\n\r\n    const [username, setUserName] = React.useState(\"\");\r\n    const [password, setPwd] = React.useState(\"\");\r\n\r\n    const login = ()=> {\r\n       axios.post('http://localhost:3000/login',{\r\n            \"ID\": id_ref.current.value,\r\n            \"password\": pw_ref.current.value}, {\r\n\r\n            }).then(function(response){\r\n                alert(\"로그인이 완료되었습니다!\")\r\n                navigate('/');\r\n                \r\n\r\n                console(response)\r\n            }).catch(function(error){\r\n                alert(\"로그인 정보가 잘못되었습니다!\")\r\n            })\r\n  \r\n    }\r\n  \r\n \r\n    return (\r\n        <div>\r\n      \r\n    <Container>\r\n    \r\n    \r\n    <div >\r\n            <input   placeholder=\"아이디를 입력해주세요.\" \r\n            onChange={(e) => setUserName(e.target.value)} ref={id_ref}/>    <br/>\r\n            <input type=\"Password\"   placeholder=\"비밀번호를 입력해주세요.\" \r\n            onChange={(e) => setPwd(e.target.value)} ref={pw_ref}/>   <br/>      \r\n      \r\n          \r\n            <Btn1 onClick={login} type=\"submit\"> 로그인  </Btn1>\r\n        \r\n            <Btn2 onClick={()=>{navigate('/SignUp')}} > 회원가입</Btn2>\r\n          </div>\r\n    \r\n          \r\n        </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\nbackground-size: cover;\r\nbackground-color: ;\r\nwidth: 400px;\r\nheight: 450px;\r\npadding: 50px;\r\nborder: 2px solid black;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-content: flex-start;\r\nfloat: center;\r\nmargin: 40px 20px 40px 20px;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%,-50%);\r\n\r\ntext-align: center;`\r\n\r\nconst Btn1 = styled.button`\r\nmargin: 10px 10px 10px 10px;\r\n`\r\n\r\nconst Btn2 = styled.button`\r\nmargin: 10px 10px 10px 10px;\r\n` ;\r\n\r\n\r\n\r\nexport default LogIn","/Users/hayeon/Desktop/minipro2/src/pages/Detail.js",["71","72"],[],"import React from 'react';\r\nimport {useNavigate,useParams} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {createPost,deletePost} from \"../redux/modules/Post\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Detail() {\r\n    const [rate, setRate] = React.useState(0);\r\n    const commentlist = useSelector((state) => state.Post.list);\r\n    \r\n    const dispatch = useDispatch();\r\n    const text = React.useRef(null);\r\n    const addCommentList = () => {\r\n       \r\n        dispatch(createPost(text.current.value));\r\n        };\r\n\r\n    \r\n    const delCommentList = () => { \r\n        dispatch(deletePost(text.current.index))\r\n    }\r\n    return (\r\n        <div>\r\n            <Dbox>\r\n        {Array.from({ length: 5 }, (item, idx) => {\r\n           return (\r\n           <div\r\n              key={idx}\r\n           onClick={() => { setRate(idx + 1);\r\n              }}\r\n              style={{\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              margin: \"5px\",\r\n             marginTop: \"20px\",                   \r\n             backgroundColor: rate < idx + 1 ? \"#ddd\" : \"#ffeb3b\",\r\n              }}\r\n          ></div>\r\n          );\r\n        })}\r\n        <button>별점 매기기</button>\r\n        </Dbox>\r\n        <div>\r\n            <input type=\"text\" ref={text}/>\r\n            <button onClick={addCommentList}>추가하기</button>\r\n        </div>\r\n        <ListStyle>\r\n            {commentlist.map((list, index) => {\r\n                return (\r\n                <ItemStyle\r\n                    className=\"list_item\"\r\n                    key={index}\r\n                    >\r\n                    {list}\r\n                    <button onClick={delCommentList}>삭제하기</button>\r\n                </ItemStyle>\r\n                );\r\n                })}\r\n                \r\n     </ListStyle>\r\n            \r\n        </div>\r\n        \r\n     \r\n    )\r\n}\r\n\r\n\r\nconst Dbox = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\nconst ListStyle = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\noverflow-x: hidden;\r\noverflow-y: auto;\r\n`;\r\n\r\nconst ItemStyle = styled.div`\r\npadding: 16px;\r\nmargin: 8px;\r\nbackground-color: aliceblue;\r\n`;\r\n\r\n\r\nexport default Detail;\r\n\r\n\r\n\r\n","/Users/hayeon/Desktop/minipro2/src/redux/modules/User.js",[],[],"/Users/hayeon/Desktop/minipro2/src/redux/modules/Post.js",[],[],"/Users/hayeon/Desktop/minipro2/src/shared/Validate.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":13,"column":16,"nodeType":"75","messageId":"76","endLine":13,"endColumn":22},{"ruleId":"73","severity":1,"message":"77","line":16,"column":12,"nodeType":"75","messageId":"76","endLine":16,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":17,"column":12,"nodeType":"75","messageId":"76","endLine":17,"endColumn":20},{"ruleId":"73","severity":1,"message":"79","line":18,"column":12,"nodeType":"75","messageId":"76","endLine":18,"endColumn":20},{"ruleId":"73","severity":1,"message":"80","line":19,"column":12,"nodeType":"75","messageId":"76","endLine":19,"endColumn":20},{"ruleId":"73","severity":1,"message":"81","line":21,"column":12,"nodeType":"75","messageId":"76","endLine":21,"endColumn":20},{"ruleId":"73","severity":1,"message":"82","line":22,"column":12,"nodeType":"75","messageId":"76","endLine":22,"endColumn":21},{"ruleId":"73","severity":1,"message":"83","line":23,"column":12,"nodeType":"75","messageId":"76","endLine":23,"endColumn":28},{"ruleId":"73","severity":1,"message":"78","line":13,"column":12,"nodeType":"75","messageId":"76","endLine":13,"endColumn":20},{"ruleId":"73","severity":1,"message":"79","line":14,"column":12,"nodeType":"75","messageId":"76","endLine":14,"endColumn":20},{"ruleId":"73","severity":1,"message":"84","line":2,"column":9,"nodeType":"75","messageId":"76","endLine":2,"endColumn":20},{"ruleId":"73","severity":1,"message":"85","line":2,"column":21,"nodeType":"75","messageId":"76","endLine":2,"endColumn":30},"no-unused-vars","'가게이름변경' is assigned a value but never used.","Identifier","unusedVar","'myprof' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'pwdCheck' is assigned a value but never used.","'id_check' is assigned a value but never used.","'pwd_check' is assigned a value but never used.","'pwd_double_check' is assigned a value but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used."]