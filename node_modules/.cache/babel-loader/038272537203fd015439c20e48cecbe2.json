{"ast":null,"code":"const LOAD = 'Post/LOAD';\nconst CREATE = 'Post/CREATE';\nconst DELETE = 'Post/DELETE';\nconst UPDATE = 'Post/UPDATE';\nconst initialState = {\n  list: []\n}; // Action Creators\n\nexport function loadPost(post_list) {\n  return {\n    type: LOAD,\n    post_list\n  };\n}\nexport function createPost(Post) {\n  return {\n    type: CREATE,\n    Post\n  };\n}\nexport function deletePost(Post_index) {\n  return {\n    type: DELETE,\n    Post_index\n  };\n}\nexport function updatePost(Post_index) {\n  return {\n    type: UPDATE,\n    Post_index\n  };\n} //middlewares\n//   export const loadPostFB = () => {\n//     return async function (dispatch) {\n//         const post_data = await getDocs(collection(db,\"images\"));\n//      let post_list= [];\n//      post_data.forEach((p) => {\n//         post_list.push({id:p.id, ...p.data()});\n//      });\n//      dispatch(loadPost(post_list));\n//     }\n// }\n// export const createPostFB= (Post) => {\n//     return async function (dispatch) {\n//         const docRef = await addDoc(collection(db,\"images\"),Post);\n//         const _post = await getDoc(docRef);\n//         const post_data = { id: _post.id, ..._post.data() };\n//         dispatch(createPost(post_data));\n//     }\n// }\n// export const updatePostFB= () => {\n//     return function(dispatch) {\n//     }\n// }\n// export const deletePostFB = (post_id) => {\n//     return async function (dispatch, getState) {\n//      if(!post_id){\n//          window.alert(\"아이디가 없네요\");\n//          return;\n//      }\n//       const docRef = doc(db, \"images\", post_id);\n//       await deleteDoc(docRef);\n//       const _Post_list = getState().Post.list;\n//       const Post_index = _Post_list.findIndex((b) => {\n//         return b.id === post_id;\n//       });\n//       dispatch(deletePost(Post_index));\n//     };\n//   };\n// Reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case \"Post/LOAD\":\n      {\n        return {\n          list: action.post_list\n        };\n      }\n\n    case \"Post/CREATE\":\n      {\n        const new_post_list = [...state.list, action.Post];\n        return {\n          list: new_post_list\n        };\n      }\n\n    case \"Post/DELETE\":\n      {\n        const new_post_list = state.list.filter((l, idx) => {\n          return parseInt(action.Post_index) !== idx;\n        });\n        return {\n          list: new_post_list\n        };\n      }\n    // do reducer stuff\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LOAD","CREATE","DELETE","UPDATE","initialState","list","loadPost","post_list","type","createPost","Post","deletePost","Post_index","updatePost","reducer","state","action","new_post_list","filter","l","idx","parseInt"],"sources":["/Users/hayeon/Desktop/minipro2/src/redux/modules/Post.js"],"sourcesContent":["const LOAD= 'Post/LOAD';\r\nconst CREATE = 'Post/CREATE';\r\nconst DELETE = 'Post/DELETE';\r\nconst UPDATE = 'Post/UPDATE';\r\n\r\nconst initialState = {\r\n    list: [],\r\n};\r\n\r\n\r\n// Action Creators\r\nexport function loadPost(post_list){\r\n    return { type: LOAD, post_list};\r\n}\r\nexport function createPost (Post) {\r\nreturn { type: CREATE , Post };\r\n}\r\n\r\nexport function deletePost(Post_index) {\r\n    return { type: DELETE, Post_index };\r\n  }\r\n\r\nexport function updatePost(Post_index){\r\n    return { type: UPDATE, Post_index };\r\n}\r\n\r\n\r\n  //middlewares\r\n\r\n//   export const loadPostFB = () => {\r\n//     return async function (dispatch) {\r\n//         const post_data = await getDocs(collection(db,\"images\"));\r\n    \r\n//      let post_list= [];\r\n\r\n//      post_data.forEach((p) => {\r\n//         post_list.push({id:p.id, ...p.data()});\r\n//      });\r\n\r\n//      dispatch(loadPost(post_list));\r\n//     }\r\n// }\r\n\r\n// export const createPostFB= (Post) => {\r\n//     return async function (dispatch) {\r\n//         const docRef = await addDoc(collection(db,\"images\"),Post);\r\n//         const _post = await getDoc(docRef);\r\n//         const post_data = { id: _post.id, ..._post.data() };\r\n//         dispatch(createPost(post_data));\r\n//     }\r\n// }\r\n\r\n// export const updatePostFB= () => {\r\n//     return function(dispatch) {\r\n\r\n//     }\r\n// }\r\n\r\n// export const deletePostFB = (post_id) => {\r\n//     return async function (dispatch, getState) {\r\n//      if(!post_id){\r\n//          window.alert(\"아이디가 없네요\");\r\n//          return;\r\n//      }\r\n//       const docRef = doc(db, \"images\", post_id);\r\n//       await deleteDoc(docRef);\r\n//       const _Post_list = getState().Post.list;\r\n//       const Post_index = _Post_list.findIndex((b) => {\r\n//         return b.id === post_id;\r\n//       });\r\n//       dispatch(deletePost(Post_index));\r\n//     };\r\n//   };\r\n\r\n  // Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case \"Post/LOAD\" : {\r\n            return{ list: action.post_list };\r\n        }\r\n\r\n        case \"Post/CREATE\": {\r\n            const new_post_list = [...state.list, action.Post];\r\n            return {list : new_post_list};\r\n            \r\n        }\r\n\r\n        case \"Post/DELETE\": {\r\n            const new_post_list= state.list.filter((l,idx) => {\r\n              return parseInt(action.Post_index) !== idx;\r\n            });\r\n            return { list: new_post_list };\r\n          }\r\n    // do reducer stuff\r\n    default: return state;\r\n    }\r\n    }"],"mappings":"AAAA,MAAMA,IAAI,GAAE,WAAZ;AACA,MAAMC,MAAM,GAAG,aAAf;AACA,MAAMC,MAAM,GAAG,aAAf;AACA,MAAMC,MAAM,GAAG,aAAf;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;AADW,CAArB,C,CAKA;;AACA,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAA4B;EAC/B,OAAO;IAAEC,IAAI,EAAER,IAAR;IAAcO;EAAd,CAAP;AACH;AACD,OAAO,SAASE,UAAT,CAAqBC,IAArB,EAA2B;EAClC,OAAO;IAAEF,IAAI,EAAEP,MAAR;IAAiBS;EAAjB,CAAP;AACC;AAED,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgC;EACnC,OAAO;IAAEJ,IAAI,EAAEN,MAAR;IAAgBU;EAAhB,CAAP;AACD;AAEH,OAAO,SAASC,UAAT,CAAoBD,UAApB,EAA+B;EAClC,OAAO;IAAEJ,IAAI,EAAEL,MAAR;IAAgBS;EAAhB,CAAP;AACH,C,CAGC;AAEF;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACF,eAAe,SAASE,OAAT,GAAoD;EAAA,IAAnCC,KAAmC,uEAA3BX,YAA2B;EAAA,IAAbY,MAAa,uEAAJ,EAAI;;EAC/D,QAAQA,MAAM,CAACR,IAAf;IACI,KAAK,WAAL;MAAmB;QACf,OAAM;UAAEH,IAAI,EAAEW,MAAM,CAACT;QAAf,CAAN;MACH;;IAED,KAAK,aAAL;MAAoB;QAChB,MAAMU,aAAa,GAAG,CAAC,GAAGF,KAAK,CAACV,IAAV,EAAgBW,MAAM,CAACN,IAAvB,CAAtB;QACA,OAAO;UAACL,IAAI,EAAGY;QAAR,CAAP;MAEH;;IAED,KAAK,aAAL;MAAoB;QAChB,MAAMA,aAAa,GAAEF,KAAK,CAACV,IAAN,CAAWa,MAAX,CAAkB,CAACC,CAAD,EAAGC,GAAH,KAAW;UAChD,OAAOC,QAAQ,CAACL,MAAM,CAACJ,UAAR,CAAR,KAAgCQ,GAAvC;QACD,CAFoB,CAArB;QAGA,OAAO;UAAEf,IAAI,EAAEY;QAAR,CAAP;MACD;IACP;;IACA;MAAS,OAAOF,KAAP;EAlBT;AAoBC"},"metadata":{},"sourceType":"module"}